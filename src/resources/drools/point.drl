import xhyan.drools.point.PointDTO;
import xhyan.drools.point.Promotion;

dialect  "mvel"

rule newMemberIn3Months

salience 9
no-loop true //对于本规则引起的fact变化(例如调用update，modify等)，只执行一次，但对于其他规则引起的无效
activation-group "issue" //一个执行规则组，在同一个组内，只能有一个规则被执行
lock-on-active true //no-loop的增强版，其他规则引起的工作内存中的fact变化时，规则也被执行一次
    when
        $pointDTO:PointDTO(newMemberIn3Months == true)  and $promotion:Promotion(inPromotion == true)
    then
     System.out.println("execute newMemberIn3Months rule!!");
     $pointDTO.setPoint($pointDTO.getTotalAmount()*2 + $promotion.getPoint());
     $pointDTO.setUsername("xhyan");          //不会引起重新执行
     modify($pointDTO){
        setUsername("xhyan"),setIssue(true)
     };
end


rule  consumeAtWeekend
salience 8
activation-group "issue1"
lock-on-active true
    when
        $pointDTO:PointDTO(weekend == true)
    then
        System.out.printf("execute consumeAtWeekend rule!!");
        $pointDTO.setPoint($pointDTO.getTotalAmount() * 2);     //双倍积分
        $pointDTO.setIssue(true);
        modify($pointDTO){setUsername("xhyan"),setIssue(true)};
end

//consume more than 10 times
rule consumeGT10Times
salience 2
no-loop true
lock-on-active true
activation-group "issue2"
when
    $pointDTO:PointDTO(countOfMonth>=10)
then
   System.out.println("execute rule 10 times!!");
   $pointDTO.setPoint($pointDTO.getPoint()+88);
   $pointDTO.setIssue(true);
   modify($pointDTO){setUsername("xhyan"),setIssue(true)};

end

//生日月
rule birthdayPoint
salience 0
no-loop false
lock-on-active true
activation-group "issue3"
when
    $pointDTO:PointDTO(brithdayMonth == true)
then
    System.out.println("execute birthday month!");
    $pointDTO.setPoint(($pointDTO.getTotalAmount())*3);
    //$pointDO.setWeekend(false);
    //update($pointDO);
    $pointDTO.setIssue(true);
    modify($pointDTO){setUsername("xhyan"),setIssue(true)};

end

